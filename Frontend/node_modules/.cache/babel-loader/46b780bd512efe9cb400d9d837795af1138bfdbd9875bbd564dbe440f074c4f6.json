{"ast":null,"code":"import axios from \"axios\";\nimport { url } from \"./API\";\nimport jwtDecode from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  name: \"\",\n  email: \"\",\n  id: \"\",\n  registerStatus: \"\",\n  registerError: \"\",\n  loginStatus: \"\",\n  loginError: \"\",\n  userLoaded: false\n};\nexport const registerUser = createAsyncThunk(\"auth/registerUser\", async (user, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const token = await axios.post(`${url}/register`, {\n      name: user.name,\n      email: user.email,\n      password: user.password\n    });\n    localStorage.setItem(\"token\", token.data);\n    return token.data;\n  } catch (error) {\n    console.log(error.response.data);\n    return rejectWithValue();\n  }\n});\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async (user, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const token = await axios.post(`${url}/login`, {\n      email: user.email,\n      password: user.password\n    });\n    localStorage.setItem(\"token\", token.data);\n    return token.data;\n  } catch (error) {\n    console.log(error.response.data);\n    return rejectWithValue();\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    loadUser(state, action) {\n      const token = state.token;\n      if (token) {\n        const user = jwtDecode(token);\n        return {\n          ...state,\n          token,\n          name: user.name,\n          email: user.email,\n          id: user.id,\n          userLoaded: true\n        };\n      }\n    },\n    logoutUser(state, action) {\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: \"\",\n        name: \"\",\n        email: \"\",\n        id: \"\",\n        registerStatus: \"\",\n        registerError: \"\",\n        loginStatus: \"\",\n        loginError: \"\",\n        userLoaded: false\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, (state, action) => {\n      return {\n        ...state,\n        registerStatus: \"pending\"\n      };\n    });\n    builder.addCase(registerUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return {\n          ...state,\n          token: action.payload,\n          name: user.name,\n          email: user.email,\n          id: user.id,\n          registerStatus: \"success\"\n        };\n      } else return state;\n      toast.warning(\"Success\", {\n        position: \"\"\n      });\n    });\n    builder.addCase(registerUser.rejected, (state, action) => {\n      return {\n        ...state,\n        registerStatus: \"rejected\",\n        registerError: action.payload\n      };\n    });\n  }\n\n  // extraReducers:(builder)=>{\n  //     builder.addCase(loginUser.pending,(state,action)=>{\n  //         return { ...state,loginStatus:\"pending\"}\n  //     })\n\n  //     builder.addCase(loginUser.fulfilled,(state,action)=>{\n  //     if(action.payload){\n  //         const user = jwtDecode(action.payload)\n  //             return{\n  //                 ...state,\n  //                 token:action.payload,\n  //                 name:user.name,\n  //                 email:user.email,\n  //                 id:user.id,\n  //                 loginStatus:\"success\"\n  //             }\n  //     }else return state\n  //     })\n\n  //     builder.addCase(loginUser.rejected,(state,action)=>{\n  //     return{\n  //         ...state,\n  //         loginStatus:\"rejected\",\n  //         loginError:action.payload\n  //     }\n  //     })\n\n  // }\n});\n\nexport const {\n  loadUser,\n  logoutUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["axios","url","jwtDecode","toast","createSlice","createAsyncThunk","require","initialState","token","localStorage","getItem","name","email","id","registerStatus","registerError","loginStatus","loginError","userLoaded","registerUser","user","_ref","rejectWithValue","post","password","setItem","data","error","console","log","response","loginUser","_ref2","authSlice","reducers","loadUser","state","action","logoutUser","removeItem","extraReducers","builder","addCase","pending","fulfilled","payload","warning","position","rejected","actions","reducer"],"sources":["/Users/nivporat/Desktop/mepelaozen/src/components/store/AuthSlice.js"],"sourcesContent":["import axios from \"axios\";\nimport { url } from \"./API\";\nimport jwtDecode from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\n\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\n\n\n const initialState = {\n    token: localStorage.getItem(\"token\"),\n    name:\"\",\n    email:\"\",\n    id:\"\",\n    registerStatus:\"\",\n    registerError:\"\",\n    loginStatus:\"\",\n    loginError:\"\",\n    userLoaded:false,\n}\n\n\n\nexport const registerUser =  createAsyncThunk(\n    \"auth/registerUser\",\n   async (user,{rejectWithValue}) => {\n        try {\n        const token = await axios.post(`${url}/register`,{\n                name:user.name,\n                email:user.email,\n                password:user.password\n            })\n            localStorage.setItem(\"token\",token.data)    \n            return token.data\n        } catch (error) {\n            console.log(error.response.data)\n           return rejectWithValue()\n        }\n    }\n)\n\n\nexport const loginUser =  createAsyncThunk(\n    \"auth/loginUser\",\n   async (user,{rejectWithValue}) => {\n        try {\n        const token = await axios.post(`${url}/login`,{\n                email:user.email,\n                password:user.password\n            })\n            localStorage.setItem(\"token\",token.data)    \n            return token.data\n        } catch (error) {\n            console.log(error.response.data)\n           return rejectWithValue()\n        }\n    }\n)\n\n\n\n\nconst authSlice = createSlice({\n    name:\"auth\",\n    initialState,\n    reducers:{\n        loadUser(state,action){\n            const token = state.token\n            if(token){\n                const user = jwtDecode(token)\n                return{\n                    ...state,\n                    token,\n                    name:user.name,\n                    email:user.email,\n                    id:user.id,\n                    userLoaded:true\n                }\n            }\n        },\n\n        logoutUser(state,action){\n            localStorage.removeItem(\"token\")\n            return{\n                ...state,\n                token:\"\",\n                name:\"\",\n                email:\"\",\n                id:\"\",\n                registerStatus:\"\",\n                registerError:\"\",\n                loginStatus:\"\",\n                loginError:\"\",\n                userLoaded:false,\n            }\n        }\n    },\n\n    extraReducers:(builder)=>{\n        builder.addCase(registerUser.pending,(state,action)=>{\n                return { ...state,registerStatus:\"pending\"}\n        })\n\n        builder.addCase(registerUser.fulfilled,(state,action)=>{\n            if(action.payload){\n                const user = jwtDecode(action.payload)\n                    return{\n                        ...state,\n                        token:action.payload,\n                        name:user.name,\n                        email:user.email,\n                        id:user.id,\n                        registerStatus:\"success\",\n                    }\n            }else return state\n\n            toast.warning(\"Success\",{position:\"\"})\n        })\n\n\n        builder.addCase(registerUser.rejected,(state,action)=>{\n            return{\n                ...state,\n                registerStatus:\"rejected\",\n                registerError:action.payload\n            }\n        })\n    },\n\n\n\n\n\n    // extraReducers:(builder)=>{\n    //     builder.addCase(loginUser.pending,(state,action)=>{\n    //         return { ...state,loginStatus:\"pending\"}\n    //     })\n        \n    //     builder.addCase(loginUser.fulfilled,(state,action)=>{\n    //     if(action.payload){\n    //         const user = jwtDecode(action.payload)\n    //             return{\n    //                 ...state,\n    //                 token:action.payload,\n    //                 name:user.name,\n    //                 email:user.email,\n    //                 id:user.id,\n    //                 loginStatus:\"success\"\n    //             }\n    //     }else return state\n    //     })\n        \n        \n    //     builder.addCase(loginUser.rejected,(state,action)=>{\n    //     return{\n    //         ...state,\n    //         loginStatus:\"rejected\",\n    //         loginError:action.payload\n    //     }\n    //     })\n   \n   \n    // }\n    \n})\n\n\n\n\n\n\n\n\nexport const {loadUser,logoutUser} = authSlice.actions\nexport default authSlice.reducer\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}