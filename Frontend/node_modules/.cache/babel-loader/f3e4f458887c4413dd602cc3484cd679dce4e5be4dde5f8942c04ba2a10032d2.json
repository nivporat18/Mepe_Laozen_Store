{"ast":null,"code":"import axios from \"axios\";\nimport { url } from \"./API\";\nimport jwtDecode from \"jwt-decode\";\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  name: \"\",\n  email: \"\",\n  _id: \"\",\n  isAdmin: \"\",\n  registerStatus: \"\",\n  registerError: \"\",\n  loginStatus: \"\",\n  loginError: \"\",\n  userLoaded: false\n};\nexport const registerUser = createAsyncThunk(\"auth/registerUser\", async (user, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const token = await axios.post(`${url}/register`, {\n      name: user.name,\n      email: user.email,\n      password: user.password\n    });\n    localStorage.setItem(\"token\", token.data);\n    return token.data;\n  } catch (error) {\n    console.log(error.response.data);\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async (user, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const token = await axios.post(`${url}/login`, {\n      email: user.email,\n      password: user.password\n    });\n    localStorage.setItem(\"token\", token.data);\n    return token.data;\n  } catch (error) {\n    console.log(error.response.data);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    loadUser(state, action) {\n      const token = state.token;\n      if (token) {\n        const user = jwtDecode(token);\n        return {\n          ...state,\n          token,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          isAdmin: user.isAdmin,\n          userLoaded: true\n        };\n      }\n    },\n    logoutUser(state, action) {\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: \"\",\n        name: \"\",\n        email: \"\",\n        _id: \"\",\n        registerStatus: \"\",\n        registerError: \"\",\n        loginStatus: \"\",\n        loginError: \"\",\n        userLoaded: false\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, (state, action) => {\n      return {\n        ...state,\n        registerStatus: \"pending\"\n      };\n    });\n    builder.addCase(registerUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return {\n          ...state,\n          token: action.payload,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          isAdmin: user.isAdmin,\n          registerStatus: \"success\"\n        };\n      } else return state;\n    });\n    builder.addCase(registerUser.rejected, (state, action) => {\n      return {\n        ...state,\n        registerStatus: \"rejected\",\n        registerError: action.payload\n      };\n    });\n\n    // ----------------------------------------------------------\n\n    builder.addCase(loginUser.pending, (state, action) => {\n      return {\n        ...state,\n        loginStatus: \"pending\"\n      };\n    });\n    builder.addCase(loginUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return {\n          ...state,\n          token: action.payload,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          isAdmin: user.isAdmin,\n          loginStatus: \"success\"\n        };\n      } else return state;\n    });\n    builder.addCase(loginUser.rejected, (state, action) => {\n      return {\n        ...state,\n        loginStatus: \"rejected\",\n        loginError: action.payload\n      };\n    });\n  }\n});\nexport const {\n  loadUser,\n  logoutUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["axios","url","jwtDecode","createSlice","createAsyncThunk","require","initialState","token","localStorage","getItem","name","email","_id","isAdmin","registerStatus","registerError","loginStatus","loginError","userLoaded","registerUser","user","_ref","rejectWithValue","post","password","setItem","data","error","console","log","response","loginUser","_ref2","authSlice","reducers","loadUser","state","action","logoutUser","removeItem","extraReducers","builder","addCase","pending","fulfilled","payload","rejected","actions","reducer"],"sources":["/Users/nivporat/Desktop/mepelaozen/src/components/store/AuthSlice.js"],"sourcesContent":["import axios from \"axios\";\nimport { url } from \"./API\";\nimport jwtDecode from \"jwt-decode\";\n\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\n\n\n const initialState = {\n    token: localStorage.getItem(\"token\"),\n    name:\"\",\n    email:\"\",\n    _id:\"\",\n    isAdmin:\"\",\n    registerStatus:\"\",\n    registerError:\"\",\n    loginStatus:\"\",\n    loginError:\"\",\n    userLoaded:false,\n}\n\n\n\nexport const registerUser =  createAsyncThunk(\n    \"auth/registerUser\",\n   async (user,{rejectWithValue}) => {\n        try {\n        const token = await axios.post(`${url}/register`,{\n                name:user.name,\n                email:user.email,\n                password:user.password\n            });\n            localStorage.setItem(\"token\",token.data);    \n            return token.data;\n        } catch (error) {\n            console.log(error.response.data)\n           return rejectWithValue(error.response.data)\n        }\n    }\n)\n\n\nexport const loginUser =  createAsyncThunk(\n    \"auth/loginUser\",\n   async (user,{rejectWithValue}) => {\n        try {\n        const token = await axios.post(`${url}/login`,{\n                email:user.email,\n                password:user.password\n            })\n            localStorage.setItem(\"token\",token.data)    \n            return token.data\n        } catch (error) {\n            console.log(error.response.data)\n           return rejectWithValue(error.response.data)\n        }\n    }\n)\n\n\n\n\nconst authSlice = createSlice({\n    name:\"auth\",\n    initialState,\n    reducers:{\n        loadUser(state,action){\n            const token = state.token\n            \n            if(token){\n                const user = jwtDecode(token)\n                return{\n                    ...state,\n                    token,\n                    name:user.name,\n                    email:user.email,\n                    _id:user._id,\n                    isAdmin:user.isAdmin,\n                    userLoaded:true\n                }\n            }\n        },\n    \n        logoutUser(state,action){\n            localStorage.removeItem(\"token\")\n            return{\n                ...state,\n                token:\"\",\n                name:\"\",\n                email:\"\",\n                _id:\"\",\n                registerStatus:\"\",\n                registerError:\"\",\n                loginStatus:\"\",\n                loginError:\"\",\n                userLoaded:false,\n            }\n        }\n    },\n\n    extraReducers:(builder)=>{\n        builder.addCase(registerUser.pending,(state,action)=>{\n            return {...state,registerStatus: \"pending\"}\n        });\n\n        builder.addCase(registerUser.fulfilled,(state,action)=>{\n            if(action.payload){\n                const user = jwtDecode(action.payload)\n                return{\n                    ...state,\n                    token:action.payload,\n                    name:user.name,\n                    email:user.email,\n                    _id:user._id,\n                    isAdmin:user.isAdmin,\n                    registerStatus:\"success\"\n                }\n            }else return state\n        });\n\n\n        builder.addCase(registerUser.rejected,(state,action)=>{\n            return{\n                ...state,\n                registerStatus:\"rejected\",\n                registerError:action.payload\n            }\n        });\n\n\n        // ----------------------------------------------------------\n\n        builder.addCase(loginUser.pending,(state,action)=>{\n            return {...state,loginStatus: \"pending\"}\n        });\n\n        builder.addCase(loginUser.fulfilled,(state,action)=>{\n            if(action.payload){\n                const user = jwtDecode(action.payload)\n                return{\n                    ...state,\n                    token:action.payload,\n                    name:user.name,\n                    email:user.email,\n                    _id:user._id,\n                    isAdmin:user.isAdmin,\n                    loginStatus:\"success\"\n                }\n            }else return state\n        });\n\n\n        builder.addCase(loginUser.rejected,(state,action)=>{\n            return{\n                ...state,\n                loginStatus:\"rejected\",\n                loginError:action.payload\n            }\n        });\n\n    },\n\n\n\n    \n})\n\n\n\n\n\n\n\n\nexport const {loadUser,logoutUser} = authSlice.actions\nexport default authSlice.reducer\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}