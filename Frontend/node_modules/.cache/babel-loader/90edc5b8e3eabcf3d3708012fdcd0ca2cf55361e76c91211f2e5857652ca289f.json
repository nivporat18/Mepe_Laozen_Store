{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { setHeaders, url } from \"../API\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  items: [],\n  status: null,\n  createStatus: null\n};\nexport const ipadProFetch = createAsyncThunk(\"ipadpro/ipadproFetch\", async () => {\n  const response = await axios.get(`${url}/ipadpro`);\n  return response === null || response === void 0 ? void 0 : response.data;\n});\nexport const ipadProCreate = createAsyncThunk(\"ipadpro/ipadproCreate\", async values => {\n  try {\n    const response = await axios.post(`${url}/ipadpro`, values, setHeaders());\n    return response === null || response === void 0 ? void 0 : response.data;\n  } catch (error) {\n    var _error$response;\n    console.log(error);\n    toast.error((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n});\nconst IpadProSlice = createSlice({\n  name: \"ipadpro\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [ipadProFetch.pending]: (state, action) => {\n      state.status = \"pending\";\n    },\n    [ipadProFetch.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.items = action.payload;\n    },\n    [ipadProFetch.rejected]: (state, action) => {\n      state.status = \"rejected\";\n    },\n    [ipadProCreate.pending]: (state, action) => {\n      state.createStatus = \"pending\";\n    },\n    [ipadProCreate.fulfilled]: (state, action) => {\n      state.items.push(action.payload);\n      state.createStatus = \"success\";\n      toast.success(\"Iphone 12 Created\");\n    },\n    [iphone12Create.rejected]: (state, action) => {\n      state.createStatus = \"rejected\";\n    }\n  }\n});\nexport default iphone12Slice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","setHeaders","url","toast","initialState","items","status","createStatus","ipadProFetch","response","get","data","ipadProCreate","values","post","error","_error$response","console","log","IpadProSlice","name","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","push","success","iphone12Create","iphone12Slice","reducer"],"sources":["/Users/nivporat/Desktop/mepelaozen/src/components/store/ipads/IpadPro.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { setHeaders, url } from \"../API\";\nimport { toast } from \"react-toastify\";\n\n\n\nconst initialState = {\n    items:[],\n    status:null,\n    createStatus:null\n}\n\n\n\nexport const ipadProFetch =  createAsyncThunk(\n    \"ipadpro/ipadproFetch\",\n   async ()=>{\n        const response = await axios.get(`${url}/ipadpro`)\n        return response?.data\n    }\n)\n\n\nexport const ipadProCreate =  createAsyncThunk(\n    \"ipadpro/ipadproCreate\",\n   async (values)=>{\n    try {\n        const response = await axios.post(`${url}/ipadpro`,values,setHeaders())\n        return response?.data\n    } catch (error) {\n        console.log(error)\n        toast.error(error.response?.data)\n    }\n       \n    }\n)\n\n\n\n\nconst IpadProSlice = createSlice({\n    name:\"ipadpro\",\n    initialState,\n    reducers:{},\n    extraReducers:{\n        [ipadProFetch.pending]:(state,action)=>{\n            state.status = \"pending\"\n        },\n\n        [ipadProFetch.fulfilled]:(state,action)=>{\n            state.status = \"success\"\n            state.items = action.payload\n        },\n\n        [ipadProFetch.rejected]:(state,action)=>{\n            state.status = \"rejected\"\n        },\n\n\n\n        [ipadProCreate.pending]:(state,action)=>{\n            state.createStatus = \"pending\"\n        },\n\n        [ipadProCreate.fulfilled]:(state,action)=>{\n            state.items.push(action.payload)\n            state.createStatus = \"success\"\n            toast.success(\"Iphone 12 Created\")\n           \n        },\n\n        [iphone12Create.rejected]:(state,action)=>{\n            state.createStatus = \"rejected\"\n        }\n        \n    }\n})\n\n\n\nexport default iphone12Slice.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,GAAG,QAAQ,QAAQ;AACxC,SAASC,KAAK,QAAQ,gBAAgB;AAItC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAC,EAAE;EACRC,MAAM,EAAC,IAAI;EACXC,YAAY,EAAC;AACjB,CAAC;AAID,OAAO,MAAMC,YAAY,GAAIV,gBAAgB,CACzC,sBAAsB,EACvB,YAAU;EACL,MAAMW,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,GAAER,GAAI,UAAS,CAAC;EAClD,OAAOO,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI;AACzB,CAAC,CACJ;AAGD,OAAO,MAAMC,aAAa,GAAId,gBAAgB,CAC1C,uBAAuB,EACxB,MAAOe,MAAM,IAAG;EACf,IAAI;IACA,MAAMJ,QAAQ,GAAG,MAAMT,KAAK,CAACc,IAAI,CAAE,GAAEZ,GAAI,UAAS,EAACW,MAAM,EAACZ,UAAU,EAAE,CAAC;IACvE,OAAOQ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI;EACzB,CAAC,CAAC,OAAOI,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IAClBZ,KAAK,CAACY,KAAK,EAAAC,eAAA,GAACD,KAAK,CAACN,QAAQ,cAAAO,eAAA,uBAAdA,eAAA,CAAgBL,IAAI,CAAC;EACrC;AAEA,CAAC,CACJ;AAKD,MAAMQ,YAAY,GAAGpB,WAAW,CAAC;EAC7BqB,IAAI,EAAC,SAAS;EACdhB,YAAY;EACZiB,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAAC;IACV,CAACd,YAAY,CAACe,OAAO,GAAE,CAACC,KAAK,EAACC,MAAM,KAAG;MACnCD,KAAK,CAAClB,MAAM,GAAG,SAAS;IAC5B,CAAC;IAED,CAACE,YAAY,CAACkB,SAAS,GAAE,CAACF,KAAK,EAACC,MAAM,KAAG;MACrCD,KAAK,CAAClB,MAAM,GAAG,SAAS;MACxBkB,KAAK,CAACnB,KAAK,GAAGoB,MAAM,CAACE,OAAO;IAChC,CAAC;IAED,CAACnB,YAAY,CAACoB,QAAQ,GAAE,CAACJ,KAAK,EAACC,MAAM,KAAG;MACpCD,KAAK,CAAClB,MAAM,GAAG,UAAU;IAC7B,CAAC;IAID,CAACM,aAAa,CAACW,OAAO,GAAE,CAACC,KAAK,EAACC,MAAM,KAAG;MACpCD,KAAK,CAACjB,YAAY,GAAG,SAAS;IAClC,CAAC;IAED,CAACK,aAAa,CAACc,SAAS,GAAE,CAACF,KAAK,EAACC,MAAM,KAAG;MACtCD,KAAK,CAACnB,KAAK,CAACwB,IAAI,CAACJ,MAAM,CAACE,OAAO,CAAC;MAChCH,KAAK,CAACjB,YAAY,GAAG,SAAS;MAC9BJ,KAAK,CAAC2B,OAAO,CAAC,mBAAmB,CAAC;IAEtC,CAAC;IAED,CAACC,cAAc,CAACH,QAAQ,GAAE,CAACJ,KAAK,EAACC,MAAM,KAAG;MACtCD,KAAK,CAACjB,YAAY,GAAG,UAAU;IACnC;EAEJ;AACJ,CAAC,CAAC;AAIF,eAAeyB,aAAa,CAACC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}