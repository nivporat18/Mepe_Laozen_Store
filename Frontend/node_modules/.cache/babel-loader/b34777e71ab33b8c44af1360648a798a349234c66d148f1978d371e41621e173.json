{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { url } from \"./API\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  items: [],\n  status: null,\n  createStatus: null\n};\nexport const productsFetch = createAsyncThunk(\"products/productsFetch\", async () => {\n  const response = await axios.get(\"http://localhost:5000/products\");\n  return response === null || response === void 0 ? void 0 : response.data;\n});\nexport const productsCreate = createAsyncThunk(\"products/productsCreate\", async values => {\n  try {\n    const response = await axios.post(`${url}/products`, values);\n    return response === null || response === void 0 ? void 0 : response.data;\n  } catch (error) {\n    var _error$response;\n    console.log(error);\n    toast.warning((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n});\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [productsFetch.pending]: (state, action) => {\n      state.status = \"pending\";\n    },\n    [productsFetch.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.items = action.payload;\n    },\n    [productsFetch.rejected]: (state, action) => {\n      state.status = \"rejected\";\n    },\n    [productsCreate.pending]: (state, action) => {\n      state.status = \"pending\";\n    },\n    [productsCreate.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.items = action.payload;\n    },\n    [productsCreate.rejected]: (state, action) => {\n      state.crea = \"rejected\";\n    }\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","url","toast","initialState","items","status","createStatus","productsFetch","response","get","data","productsCreate","values","post","error","_error$response","console","log","warning","productsSlice","name","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","crea","reducer"],"sources":["/Users/nivporat/Desktop/mepelaozen/src/components/store/ProductSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { url } from \"./API\";\nimport { toast } from \"react-toastify\";\n\n\n\nconst initialState = {\n    items:[],\n    status:null,\n    createStatus:null\n}\n\n\n\nexport const productsFetch =  createAsyncThunk(\n    \"products/productsFetch\",\n   async ()=>{\n        const response = await axios.get(\"http://localhost:5000/products\")\n        return response?.data\n    }\n)\n\n\nexport const productsCreate =  createAsyncThunk(\n    \"products/productsCreate\",\n   async (values)=>{\n    try {\n        const response = await axios.post(`${url}/products`,values)\n        return response?.data\n    } catch (error) {\n        console.log(error)\n        toast.warning(error.response?.data)\n    }\n       \n    }\n)\n\n\n\n\nconst productsSlice = createSlice({\n    name:\"products\",\n    initialState,\n    reducers:{},\n    extraReducers:{\n        [productsFetch.pending]:(state,action)=>{\n            state.status = \"pending\"\n        },\n\n        [productsFetch.fulfilled]:(state,action)=>{\n            state.status = \"success\"\n            state.items = action.payload\n        },\n\n        [productsFetch.rejected]:(state,action)=>{\n            state.status = \"rejected\"\n        },\n\n\n\n        [productsCreate.pending]:(state,action)=>{\n            state.status = \"pending\"\n        },\n\n        [productsCreate.fulfilled]:(state,action)=>{\n            state.status = \"success\"\n            state.items = action.payload\n        },\n\n        [productsCreate.rejected]:(state,action)=>{\n            state.crea = \"rejected\"\n        }\n        \n    }\n})\n\n\n\nexport default productsSlice.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,OAAO;AAC3B,SAASC,KAAK,QAAQ,gBAAgB;AAItC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAC,EAAE;EACRC,MAAM,EAAC,IAAI;EACXC,YAAY,EAAC;AACjB,CAAC;AAID,OAAO,MAAMC,aAAa,GAAIT,gBAAgB,CAC1C,wBAAwB,EACzB,YAAU;EACL,MAAMU,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,gCAAgC,CAAC;EAClE,OAAOD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI;AACzB,CAAC,CACJ;AAGD,OAAO,MAAMC,cAAc,GAAIb,gBAAgB,CAC3C,yBAAyB,EAC1B,MAAOc,MAAM,IAAG;EACf,IAAI;IACA,MAAMJ,QAAQ,GAAG,MAAMR,KAAK,CAACa,IAAI,CAAE,GAAEZ,GAAI,WAAU,EAACW,MAAM,CAAC;IAC3D,OAAOJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI;EACzB,CAAC,CAAC,OAAOI,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IAClBZ,KAAK,CAACgB,OAAO,EAAAH,eAAA,GAACD,KAAK,CAACN,QAAQ,cAAAO,eAAA,uBAAdA,eAAA,CAAgBL,IAAI,CAAC;EACvC;AAEA,CAAC,CACJ;AAKD,MAAMS,aAAa,GAAGpB,WAAW,CAAC;EAC9BqB,IAAI,EAAC,UAAU;EACfjB,YAAY;EACZkB,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAAC;IACV,CAACf,aAAa,CAACgB,OAAO,GAAE,CAACC,KAAK,EAACC,MAAM,KAAG;MACpCD,KAAK,CAACnB,MAAM,GAAG,SAAS;IAC5B,CAAC;IAED,CAACE,aAAa,CAACmB,SAAS,GAAE,CAACF,KAAK,EAACC,MAAM,KAAG;MACtCD,KAAK,CAACnB,MAAM,GAAG,SAAS;MACxBmB,KAAK,CAACpB,KAAK,GAAGqB,MAAM,CAACE,OAAO;IAChC,CAAC;IAED,CAACpB,aAAa,CAACqB,QAAQ,GAAE,CAACJ,KAAK,EAACC,MAAM,KAAG;MACrCD,KAAK,CAACnB,MAAM,GAAG,UAAU;IAC7B,CAAC;IAID,CAACM,cAAc,CAACY,OAAO,GAAE,CAACC,KAAK,EAACC,MAAM,KAAG;MACrCD,KAAK,CAACnB,MAAM,GAAG,SAAS;IAC5B,CAAC;IAED,CAACM,cAAc,CAACe,SAAS,GAAE,CAACF,KAAK,EAACC,MAAM,KAAG;MACvCD,KAAK,CAACnB,MAAM,GAAG,SAAS;MACxBmB,KAAK,CAACpB,KAAK,GAAGqB,MAAM,CAACE,OAAO;IAChC,CAAC;IAED,CAAChB,cAAc,CAACiB,QAAQ,GAAE,CAACJ,KAAK,EAACC,MAAM,KAAG;MACtCD,KAAK,CAACK,IAAI,GAAG,UAAU;IAC3B;EAEJ;AACJ,CAAC,CAAC;AAIF,eAAeV,aAAa,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}